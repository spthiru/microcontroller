

HI-TECH Software PIC LITE Macro Assembler V9.81 build 7503 
                                                                                               Wed Sep 13 11:15:32 2023

HI-TECH Software Omniscient Code Generator (Lite mode) build 7503
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 7503"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_lcd_command
    43                           	FNCALL	_main,_lcd_data
    44                           	FNCALL	_lcd_data,_delay
    45                           	FNCALL	_lcd_command,_delay
    46                           	FNROOT	_main
    47                           	global	_PORTD
    48                           psect	text84,local,class=CODE,delta=2
    49                           global __ptext84
    50  0000                     __ptext84:
    51  0008                     _PORTD	set	8
    52                           	global	_TMR1H
    53  000F                     _TMR1H	set	15
    54                           	global	_TMR1L
    55  000E                     _TMR1L	set	14
    56                           	global	_RC0
    57  0038                     _RC0	set	56
    58                           	global	_RC1
    59  0039                     _RC1	set	57
    60                           	global	_RC2
    61  003A                     _RC2	set	58
    62                           	global	_T1CKPS0
    63  0084                     _T1CKPS0	set	132
    64                           	global	_T1CKPS1
    65  0085                     _T1CKPS1	set	133
    66                           	global	_TMR1CS
    67  0081                     _TMR1CS	set	129
    68                           	global	_TMR1IF
    69  0060                     _TMR1IF	set	96
    70                           	global	_TMR1ON
    71  0080                     _TMR1ON	set	128
    72                           	global	_TRISD
    73  0088                     _TRISD	set	136
    74                           	global	_TRISC0
    75  0438                     _TRISC0	set	1080
    76                           	global	_TRISC1
    77  0439                     _TRISC1	set	1081
    78                           	global	_TRISC2
    79  043A                     _TRISC2	set	1082
    80                           	file	"lcd.as"
    81                           	line	#
    82                           psect cinit,class=CODE,delta=2
    83                           global start_initialization
    84  06DE                     start_initialization:
    85                           
    86                           psect cinit,class=CODE,delta=2
    87                           global end_of_initialization
    88                           
    89                           ;End of C runtime variable initialization code
    90                           
    91  06DE                     end_of_initialization:
    92  06DE  0183               clrf status
    93  06DF  120A  118A  2F16   ljmp _main	;jump to C main() function
    94                           psect	cstackCOMMON,class=COMMON,space=1
    95                           global __pcstackCOMMON
    96  0070                     __pcstackCOMMON:
    97                           	global	?_lcd_command
    98  0070                     ?_lcd_command:	; 0 bytes @ 0x0
    99                           	global	??_lcd_command
   100  0070                     ??_lcd_command:	; 0 bytes @ 0x0
   101                           	global	?_lcd_data
   102  0070                     ?_lcd_data:	; 0 bytes @ 0x0
   103                           	global	??_lcd_data
   104  0070                     ??_lcd_data:	; 0 bytes @ 0x0
   105                           	global	?_delay
   106  0070                     ?_delay:	; 0 bytes @ 0x0
   107                           	global	??_delay
   108  0070                     ??_delay:	; 0 bytes @ 0x0
   109                           	global	?_main
   110  0070                     ?_main:	; 0 bytes @ 0x0
   111                           	global	lcd_command@data
   112  0070                     lcd_command@data:	; 1 bytes @ 0x0
   113                           	global	lcd_data@data
   114  0070                     lcd_data@data:	; 1 bytes @ 0x0
   115  0070                     	ds	1
   116                           	global	??_main
   117  0071                     ??_main:	; 0 bytes @ 0x1
   118 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   119 ;;Auto spaces:   Size  Autos    Used
   120 ;; COMMON          14      1       1
   121 ;; BANK0           80      0       0
   122 ;; BANK1           80      0       0
   123 ;; BANK3           96      0       0
   124 ;; BANK2           96      0       0
   125                           
   126 ;;
   127 ;; Pointer list with targets:
   128                           
   129                           
   130                           
   131 ;;
   132 ;; Critical Paths under _main in COMMON
   133 ;;
   134 ;;   _main->_lcd_command
   135 ;;   _main->_lcd_data
   136 ;;
   137 ;; Critical Paths under _main in BANK0
   138 ;;
   139 ;;   None.
   140 ;;
   141 ;; Critical Paths under _main in BANK1
   142 ;;
   143 ;;   None.
   144 ;;
   145 ;; Critical Paths under _main in BANK3
   146 ;;
   147 ;;   None.
   148 ;;
   149 ;; Critical Paths under _main in BANK2
   150 ;;
   151 ;;   None.
   152                           
   153 ;;
   154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   155 ;;
   156                           
   157 ;;
   158 ;;Call Graph Tables:
   159 ;;
   160 ;; ---------------------------------------------------------------------------------
   161 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   162 ;; ---------------------------------------------------------------------------------
   163 ;; (0) _main                                                 0     0      0      30
   164 ;;                        _lcd_command
   165 ;;                           _lcd_data
   166 ;; ---------------------------------------------------------------------------------
   167 ;; (1) _lcd_data                                             1     1      0      15
   168 ;;                                              0 COMMON     1     1      0
   169 ;;                              _delay
   170 ;; ---------------------------------------------------------------------------------
   171 ;; (1) _lcd_command                                          1     1      0      15
   172 ;;                                              0 COMMON     1     1      0
   173 ;;                              _delay
   174 ;; ---------------------------------------------------------------------------------
   175 ;; (2) _delay                                                0     0      0       0
   176 ;; ---------------------------------------------------------------------------------
   177 ;; Estimated maximum stack depth 2
   178 ;; ---------------------------------------------------------------------------------
   179                           
   180 ;; Call Graph Graphs:
   181                           
   182 ;; _main (ROOT)
   183 ;;   _lcd_command
   184 ;;     _delay
   185 ;;   _lcd_data
   186 ;;     _delay
   187 ;;
   188                           
   189 ;; Address spaces:
   190                           
   191 ;;Name               Size   Autos  Total    Cost      Usage
   192 ;;BITCOMMON            E      0       0       0        0.0%
   193 ;;EEDATA             100      0       0       0        0.0%
   194 ;;NULL                 0      0       0       0        0.0%
   195 ;;CODE                 0      0       0       0        0.0%
   196 ;;COMMON               E      1       1       1        7.1%
   197 ;;BITSFR0              0      0       0       1        0.0%
   198 ;;SFR0                 0      0       0       1        0.0%
   199 ;;BITSFR1              0      0       0       2        0.0%
   200 ;;SFR1                 0      0       0       2        0.0%
   201 ;;STACK                0      0       2       2        0.0%
   202 ;;ABS                  0      0       0       3        0.0%
   203 ;;BITBANK0            50      0       0       4        0.0%
   204 ;;BITSFR3              0      0       0       4        0.0%
   205 ;;SFR3                 0      0       0       4        0.0%
   206 ;;BANK0               50      0       0       5        0.0%
   207 ;;BITSFR2              0      0       0       5        0.0%
   208 ;;SFR2                 0      0       0       5        0.0%
   209 ;;BITBANK1            50      0       0       6        0.0%
   210 ;;BANK1               50      0       0       7        0.0%
   211 ;;BITBANK3            60      0       0       8        0.0%
   212 ;;BANK3               60      0       0       9        0.0%
   213 ;;BITBANK2            60      0       0      10        0.0%
   214 ;;BANK2               60      0       0      11        0.0%
   215 ;;DATA                 0      0       0      12        0.0%
   216                           
   217                           	global	_main
   218                           psect	maintext,global,class=CODE,delta=2
   219                           global __pmaintext
   220  0716                     __pmaintext:
   221                           
   222 ;; *************** function _main *****************
   223 ;; Defined at:
   224 ;;		line 10 in file "G:\PIC ass\LCD Display\lcd_source\lcd.c"
   225 ;; Parameters:    Size  Location     Type
   226 ;;		None
   227 ;; Auto vars:     Size  Location     Type
   228 ;;		None
   229 ;; Return value:  Size  Location     Type
   230 ;;		None               void
   231 ;; Registers used:
   232 ;;		wreg, status,2, status,0, pclath, cstack
   233 ;; Tracked objects:
   234 ;;		On entry : 17F/0
   235 ;;		On exit  : 0/0
   236 ;;		Unchanged: 0/0
   237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   238 ;;      Params:         0       0       0       0       0
   239 ;;      Locals:         0       0       0       0       0
   240 ;;      Temps:          0       0       0       0       0
   241 ;;      Totals:         0       0       0       0       0
   242 ;;Total ram usage:        0 bytes
   243 ;; Hardware stack levels required when called:    2
   244 ;; This function calls:
   245 ;;		_lcd_command
   246 ;;		_lcd_data
   247 ;; This function is called by:
   248 ;;		Startup code after reset
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           psect	maintext
   252                           	file	"G:\PIC ass\LCD Display\lcd_source\lcd.c"
   253                           	line	10
   254                           	global	__size_of_main
   255  00EA                     	__size_of_main	equ	__end_of_main-_main
   256                           	
   257  0716                     _main:	
   258                           	opt	stack 6
   259                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   260                           	line	11
   261                           	
   262  0716                     l1860:	
   263                           ;lcd.c: 11: TRISD=0;
   264  0716  1683               	bsf	status, 5	;RP0=1, select bank1
   265  0717  1303               	bcf	status, 6	;RP1=0, select bank1
   266  0718  0188               	clrf	(136)^080h	;volatile
   267                           	line	12
   268                           	
   269  0719                     l1862:	
   270                           ;lcd.c: 12: TRISC0=0;
   271  0719  1007               	bcf	(1080/8)^080h,(1080)&7
   272                           	line	13
   273                           	
   274  071A                     l1864:	
   275                           ;lcd.c: 13: TRISC1=0;
   276  071A  1087               	bcf	(1081/8)^080h,(1081)&7
   277                           	line	14
   278                           	
   279  071B                     l1866:	
   280                           ;lcd.c: 14: TRISC2=0;
   281  071B  1107               	bcf	(1082/8)^080h,(1082)&7
   282                           	line	15
   283                           ;lcd.c: 15: PORTD=0x00;
   284  071C  1283               	bcf	status, 5	;RP0=0, select bank0
   285  071D  1303               	bcf	status, 6	;RP1=0, select bank0
   286  071E  0188               	clrf	(8)	;volatile
   287                           	line	17
   288                           	
   289  071F                     l1868:	
   290                           ;lcd.c: 17: lcd_command(0x0f);
   291  071F  300F               	movlw	(0Fh)
   292  0720  120A  118A  26E2   	fcall	_lcd_command
              120A  118A         
   293                           	line	18
   294                           	
   295  0725                     l1870:	
   296                           ;lcd.c: 18: lcd_command(0x38);
   297  0725  3038               	movlw	(038h)
   298  0726  120A  118A  26E2   	fcall	_lcd_command
              120A  118A         
   299                           	line	19
   300                           	
   301  072B                     l1872:	
   302                           ;lcd.c: 19: lcd_command(0x80);
   303  072B  3080               	movlw	(080h)
   304  072C  120A  118A  26E2   	fcall	_lcd_command
              120A  118A         
   305                           	line	20
   306                           	
   307  0731                     l1874:	
   308                           ;lcd.c: 20: lcd_data(' ');
   309  0731  3020               	movlw	(020h)
   310  0732  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   311                           	line	21
   312                           	
   313  0737                     l1876:	
   314                           ;lcd.c: 21: lcd_data('s');
   315  0737  3073               	movlw	(073h)
   316  0738  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   317                           	line	22
   318                           	
   319  073D                     l1878:	
   320                           ;lcd.c: 22: lcd_data('c');
   321  073D  3063               	movlw	(063h)
   322  073E  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   323                           	line	23
   324                           	
   325  0743                     l1880:	
   326                           ;lcd.c: 23: lcd_data('h');
   327  0743  3068               	movlw	(068h)
   328  0744  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   329                           	line	24
   330                           	
   331  0749                     l1882:	
   332                           ;lcd.c: 24: lcd_data('o');
   333  0749  306F               	movlw	(06Fh)
   334  074A  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   335                           	line	25
   336                           	
   337  074F                     l1884:	
   338                           ;lcd.c: 25: lcd_data('o');
   339  074F  306F               	movlw	(06Fh)
   340  0750  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   341                           	line	26
   342                           	
   343  0755                     l1886:	
   344                           ;lcd.c: 26: lcd_data('l');
   345  0755  306C               	movlw	(06Ch)
   346  0756  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   347                           	line	27
   348                           	
   349  075B                     l1888:	
   350                           ;lcd.c: 27: lcd_data(' ');
   351  075B  3020               	movlw	(020h)
   352  075C  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   353                           	line	28
   354                           	
   355  0761                     l1890:	
   356                           ;lcd.c: 28: lcd_data('o');
   357  0761  306F               	movlw	(06Fh)
   358  0762  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   359                           	line	29
   360                           	
   361  0767                     l1892:	
   362                           ;lcd.c: 29: lcd_data('f');
   363  0767  3066               	movlw	(066h)
   364  0768  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   365                           	line	30
   366                           	
   367  076D                     l1894:	
   368                           ;lcd.c: 30: lcd_data(' ');
   369  076D  3020               	movlw	(020h)
   370  076E  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   371                           	line	31
   372                           	
   373  0773                     l1896:	
   374                           ;lcd.c: 31: lcd_data('l');
   375  0773  306C               	movlw	(06Ch)
   376  0774  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   377                           	line	32
   378                           	
   379  0779                     l1898:	
   380                           ;lcd.c: 32: lcd_data('i');
   381  0779  3069               	movlw	(069h)
   382  077A  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   383                           	line	33
   384                           	
   385  077F                     l1900:	
   386                           ;lcd.c: 33: lcd_data('n');
   387  077F  306E               	movlw	(06Eh)
   388  0780  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   389                           	line	34
   390                           	
   391  0785                     l1902:	
   392                           ;lcd.c: 34: lcd_data('u');
   393  0785  3075               	movlw	(075h)
   394  0786  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   395                           	line	35
   396                           	
   397  078B                     l1904:	
   398                           ;lcd.c: 35: lcd_data('x');
   399  078B  3078               	movlw	(078h)
   400  078C  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   401                           	line	36
   402                           	
   403  0791                     l1906:	
   404                           ;lcd.c: 36: lcd_data(' ');
   405  0791  3020               	movlw	(020h)
   406  0792  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   407                           	line	37
   408                           	
   409  0797                     l1908:	
   410                           ;lcd.c: 37: lcd_command(0xc0);
   411  0797  30C0               	movlw	(0C0h)
   412  0798  120A  118A  26E2   	fcall	_lcd_command
              120A  118A         
   413                           	line	38
   414                           	
   415  079D                     l1910:	
   416                           ;lcd.c: 38: lcd_data(' ');
   417  079D  3020               	movlw	(020h)
   418  079E  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   419                           	line	39
   420                           	
   421  07A3                     l1912:	
   422                           ;lcd.c: 39: lcd_data(' ');
   423  07A3  3020               	movlw	(020h)
   424  07A4  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   425                           	line	40
   426                           	
   427  07A9                     l1914:	
   428                           ;lcd.c: 40: lcd_data(' ');
   429  07A9  3020               	movlw	(020h)
   430  07AA  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   431                           	line	41
   432                           	
   433  07AF                     l1916:	
   434                           ;lcd.c: 41: lcd_data('D');
   435  07AF  3044               	movlw	(044h)
   436  07B0  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   437                           	line	42
   438                           	
   439  07B5                     l1918:	
   440                           ;lcd.c: 42: lcd_data('h');
   441  07B5  3068               	movlw	(068h)
   442  07B6  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   443                           	line	43
   444                           	
   445  07BB                     l1920:	
   446                           ;lcd.c: 43: lcd_data('a');
   447  07BB  3061               	movlw	(061h)
   448  07BC  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   449                           	line	44
   450                           	
   451  07C1                     l1922:	
   452                           ;lcd.c: 44: lcd_data('r');
   453  07C1  3072               	movlw	(072h)
   454  07C2  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   455                           	line	45
   456                           	
   457  07C7                     l1924:	
   458                           ;lcd.c: 45: lcd_data('m');
   459  07C7  306D               	movlw	(06Dh)
   460  07C8  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   461                           	line	46
   462                           	
   463  07CD                     l1926:	
   464                           ;lcd.c: 46: lcd_data('a');
   465  07CD  3061               	movlw	(061h)
   466  07CE  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   467                           	line	47
   468                           	
   469  07D3                     l1928:	
   470                           ;lcd.c: 47: lcd_data('p');
   471  07D3  3070               	movlw	(070h)
   472  07D4  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   473                           	line	48
   474                           	
   475  07D9                     l1930:	
   476                           ;lcd.c: 48: lcd_data('u');
   477  07D9  3075               	movlw	(075h)
   478  07DA  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   479                           	line	49
   480                           	
   481  07DF                     l1932:	
   482                           ;lcd.c: 49: lcd_data('r');
   483  07DF  3072               	movlw	(072h)
   484  07E0  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   485                           	line	50
   486                           	
   487  07E5                     l1934:	
   488                           ;lcd.c: 50: lcd_data('i');
   489  07E5  3069               	movlw	(069h)
   490  07E6  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   491                           	line	51
   492                           	
   493  07EB                     l1936:	
   494                           ;lcd.c: 51: lcd_data(' ');
   495  07EB  3020               	movlw	(020h)
   496  07EC  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   497                           	line	52
   498                           	
   499  07F1                     l1938:	
   500                           ;lcd.c: 52: lcd_data(' ');
   501  07F1  3020               	movlw	(020h)
   502  07F2  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   503                           	line	53
   504                           	
   505  07F7                     l1940:	
   506                           ;lcd.c: 53: lcd_data(' ');
   507  07F7  3020               	movlw	(020h)
   508  07F8  120A  118A  26F3   	fcall	_lcd_data
              120A  118A         
   509                           	line	54
   510                           	
   511  07FD                     l691:	
   512                           	global	start
   513  07FD  120A  118A  2800   	ljmp	start
   514                           	opt stack 0
   515                           GLOBAL	__end_of_main
   516  0800                     	__end_of_main:
   517 ;; =============== function _main ends ============
   518                           
   519                           	signat	_main,88
   520                           	global	_lcd_data
   521                           psect	text85,local,class=CODE,delta=2
   522                           global __ptext85
   523  06F3                     __ptext85:
   524                           
   525 ;; *************** function _lcd_data *****************
   526 ;; Defined at:
   527 ;;		line 66 in file "G:\PIC ass\LCD Display\lcd_source\lcd.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;  data            1    wreg     unsigned char 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  data            1    0[COMMON] unsigned char 
   532 ;; Return value:  Size  Location     Type
   533 ;;		None               void
   534 ;; Registers used:
   535 ;;		wreg, status,2, status,0, pclath, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   541 ;;      Params:         0       0       0       0       0
   542 ;;      Locals:         1       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0
   544 ;;      Totals:         1       0       0       0       0
   545 ;;Total ram usage:        1 bytes
   546 ;; Hardware stack levels used:    1
   547 ;; Hardware stack levels required when called:    1
   548 ;; This function calls:
   549 ;;		_delay
   550 ;; This function is called by:
   551 ;;		_main
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           psect	text85
   555                           	file	"G:\PIC ass\LCD Display\lcd_source\lcd.c"
   556                           	line	66
   557                           	global	__size_of_lcd_data
   558  0011                     	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_data
   559                           	
   560  06F3                     _lcd_data:	
   561                           	opt	stack 6
   562                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
   563                           ;lcd_data@data stored from wreg
   564  06F3  00F0               	movwf	(lcd_data@data)
   565                           	line	67
   566                           	
   567  06F4                     l1852:	
   568                           ;lcd.c: 67: RC0 = 1;
   569  06F4  1283               	bcf	status, 5	;RP0=0, select bank0
   570  06F5  1303               	bcf	status, 6	;RP1=0, select bank0
   571  06F6  1407               	bsf	(56/8),(56)&7
   572                           	line	68
   573                           ;lcd.c: 68: RC1 = 0;
   574  06F7  1087               	bcf	(57/8),(57)&7
   575                           	line	69
   576                           ;lcd.c: 69: RC2 = 1;
   577  06F8  1507               	bsf	(58/8),(58)&7
   578                           	line	70
   579                           	
   580  06F9                     l1854:	
   581                           ;lcd.c: 70: PORTD= data;
   582  06F9  0870               	movf	(lcd_data@data),w
   583  06FA  0088               	movwf	(8)	;volatile
   584                           	line	71
   585                           	
   586  06FB                     l1856:	
   587                           ;lcd.c: 71: delay();
   588  06FB  120A  118A  2704   	fcall	_delay
              120A  118A         
   589                           	line	72
   590                           	
   591  0700                     l1858:	
   592                           ;lcd.c: 72: RC2=0;
   593  0700  1283               	bcf	status, 5	;RP0=0, select bank0
   594  0701  1303               	bcf	status, 6	;RP1=0, select bank0
   595  0702  1107               	bcf	(58/8),(58)&7
   596                           	line	73
   597                           	
   598  0703                     l697:	
   599  0703  0008               	return
   600                           	opt stack 0
   601                           GLOBAL	__end_of_lcd_data
   602  0704                     	__end_of_lcd_data:
   603 ;; =============== function _lcd_data ends ============
   604                           
   605                           	signat	_lcd_data,4216
   606                           	global	_lcd_command
   607                           psect	text86,local,class=CODE,delta=2
   608                           global __ptext86
   609  06E2                     __ptext86:
   610                           
   611 ;; *************** function _lcd_command *****************
   612 ;; Defined at:
   613 ;;		line 56 in file "G:\PIC ass\LCD Display\lcd_source\lcd.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  data            1    wreg     unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  data            1    0[COMMON] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;		None               void
   620 ;; Registers used:
   621 ;;		wreg, status,2, status,0, pclath, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         1       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0
   630 ;;      Totals:         1       0       0       0       0
   631 ;;Total ram usage:        1 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    1
   634 ;; This function calls:
   635 ;;		_delay
   636 ;; This function is called by:
   637 ;;		_main
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           psect	text86
   641                           	file	"G:\PIC ass\LCD Display\lcd_source\lcd.c"
   642                           	line	56
   643                           	global	__size_of_lcd_command
   644  0011                     	__size_of_lcd_command	equ	__end_of_lcd_command-_lcd_command
   645                           	
   646  06E2                     _lcd_command:	
   647                           	opt	stack 6
   648                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
   649                           ;lcd_command@data stored from wreg
   650  06E2  00F0               	movwf	(lcd_command@data)
   651                           	line	57
   652                           	
   653  06E3                     l1844:	
   654                           ;lcd.c: 57: RC0 = 0;
   655  06E3  1283               	bcf	status, 5	;RP0=0, select bank0
   656  06E4  1303               	bcf	status, 6	;RP1=0, select bank0
   657  06E5  1007               	bcf	(56/8),(56)&7
   658                           	line	58
   659                           ;lcd.c: 58: RC1 = 0;
   660  06E6  1087               	bcf	(57/8),(57)&7
   661                           	line	59
   662                           ;lcd.c: 59: RC2 = 1;
   663  06E7  1507               	bsf	(58/8),(58)&7
   664                           	line	60
   665                           	
   666  06E8                     l1846:	
   667                           ;lcd.c: 60: PORTD=data;
   668  06E8  0870               	movf	(lcd_command@data),w
   669  06E9  0088               	movwf	(8)	;volatile
   670                           	line	61
   671                           	
   672  06EA                     l1848:	
   673                           ;lcd.c: 61: delay();
   674  06EA  120A  118A  2704   	fcall	_delay
              120A  118A         
   675                           	line	62
   676                           	
   677  06EF                     l1850:	
   678                           ;lcd.c: 62: RC2=0;
   679  06EF  1283               	bcf	status, 5	;RP0=0, select bank0
   680  06F0  1303               	bcf	status, 6	;RP1=0, select bank0
   681  06F1  1107               	bcf	(58/8),(58)&7
   682                           	line	64
   683                           	
   684  06F2                     l694:	
   685  06F2  0008               	return
   686                           	opt stack 0
   687                           GLOBAL	__end_of_lcd_command
   688  06F3                     	__end_of_lcd_command:
   689 ;; =============== function _lcd_command ends ============
   690                           
   691                           	signat	_lcd_command,4216
   692                           	global	_delay
   693                           psect	text87,local,class=CODE,delta=2
   694                           global __ptext87
   695  0704                     __ptext87:
   696                           
   697 ;; *************** function _delay *****************
   698 ;; Defined at:
   699 ;;		line 75 in file "G:\PIC ass\LCD Display\lcd_source\lcd.c"
   700 ;; Parameters:    Size  Location     Type
   701 ;;		None
   702 ;; Auto vars:     Size  Location     Type
   703 ;;		None
   704 ;; Return value:  Size  Location     Type
   705 ;;		None               void
   706 ;; Registers used:
   707 ;;		wreg
   708 ;; Tracked objects:
   709 ;;		On entry : 0/0
   710 ;;		On exit  : 0/0
   711 ;;		Unchanged: 0/0
   712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   713 ;;      Params:         0       0       0       0       0
   714 ;;      Locals:         0       0       0       0       0
   715 ;;      Temps:          0       0       0       0       0
   716 ;;      Totals:         0       0       0       0       0
   717 ;;Total ram usage:        0 bytes
   718 ;; Hardware stack levels used:    1
   719 ;; This function calls:
   720 ;;		Nothing
   721 ;; This function is called by:
   722 ;;		_lcd_command
   723 ;;		_lcd_data
   724 ;; This function uses a non-reentrant model
   725 ;;
   726                           psect	text87
   727                           	file	"G:\PIC ass\LCD Display\lcd_source\lcd.c"
   728                           	line	75
   729                           	global	__size_of_delay
   730  0012                     	__size_of_delay	equ	__end_of_delay-_delay
   731                           	
   732  0704                     _delay:	
   733                           	opt	stack 6
   734                           ; Regs used in _delay: [wreg]
   735                           	line	76
   736                           	
   737  0704                     l1072:	
   738                           ;lcd.c: 76: TMR1CS=0;
   739  0704  1283               	bcf	status, 5	;RP0=0, select bank0
   740  0705  1303               	bcf	status, 6	;RP1=0, select bank0
   741  0706  1090               	bcf	(129/8),(129)&7
   742                           	line	77
   743                           ;lcd.c: 77: T1CKPS1=1;
   744  0707  1690               	bsf	(133/8),(133)&7
   745                           	line	78
   746                           ;lcd.c: 78: T1CKPS0=1;
   747  0708  1610               	bsf	(132/8),(132)&7
   748                           	line	79
   749                           	
   750  0709                     l1074:	
   751                           ;lcd.c: 79: TMR1H=0x0b;
   752  0709  300B               	movlw	(0Bh)
   753  070A  008F               	movwf	(15)	;volatile
   754                           	line	80
   755                           ;lcd.c: 80: TMR1L=0xbc;
   756  070B  30BC               	movlw	(0BCh)
   757  070C  008E               	movwf	(14)	;volatile
   758                           	line	81
   759                           	
   760  070D                     l1076:	
   761                           ;lcd.c: 81: TMR1ON=1;
   762  070D  1410               	bsf	(128/8),(128)&7
   763                           	line	82
   764                           ;lcd.c: 82: while(!TMR1IF);
   765  070E  2F0F               	goto	l700
   766                           	
   767  070F                     l701:	
   768                           	
   769  070F                     l700:	
   770  070F  1C0C               	btfss	(96/8),(96)&7
   771  0710  2F12               	goto	u11
   772  0711  2F13               	goto	u10
   773  0712                     u11:
   774  0712  2F0F               	goto	l700
   775  0713                     u10:
   776                           	
   777  0713                     l702:	
   778                           	line	83
   779                           ;lcd.c: 83: TMR1IF=0;
   780  0713  100C               	bcf	(96/8),(96)&7
   781                           	line	84
   782                           ;lcd.c: 84: TMR1ON=1;
   783  0714  1410               	bsf	(128/8),(128)&7
   784                           	line	85
   785                           	
   786  0715                     l703:	
   787  0715  0008               	return
   788                           	opt stack 0
   789                           GLOBAL	__end_of_delay
   790  0716                     	__end_of_delay:
   791 ;; =============== function _delay ends ============
   792                           
   793                           	signat	_delay,88
   794                           psect	text88,local,class=CODE,delta=2
   795                           global __ptext88
   796  0000                     __ptext88:
   797                           	global	btemp
   798  007E                     	btemp set 07Eh
   799                           
   800                           	DABS	1,126,2	;btemp
   801                           	global	wtemp0
   802  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.81 build 7503 
Symbol Table                                                                                   Wed Sep 13 11:15:32 2023

        lcd_data@data 0070                    u10 0713                    u11 0712                   l700 070F  
                 l701 070F                   l702 0713                   l703 0715                   l691 07FD  
                 l694 06F2                   l697 0703                   _RC0 0038                   _RC1 0039  
                 _RC2 003A                  l1072 0704                  l1074 0709                  l1076 070D  
                l1900 077F                  l1910 079D                  l1902 0785                  l1920 07BB  
                l1912 07A3                  l1904 078B                  l1850 06EF                  l1930 07D9  
                l1922 07C1                  l1914 07A9                  l1906 0791                  l1844 06E3  
                l1852 06F4                  l1940 07F7                  l1932 07DF                  l1924 07C7  
                l1916 07AF                  l1908 0797                  l1860 0716                  l1846 06E8  
                l1854 06F9                  l1934 07E5                  l1926 07CD                  l1918 07B5  
                l1870 0725                  l1862 0719                  l1848 06EA                  l1856 06FB  
                l1936 07EB                  l1928 07D3                  l1880 0743                  l1872 072B  
                l1864 071A                  l1858 0700                  l1938 07F1                  l1890 0761  
                l1882 0749                  l1874 0731                  l1866 071B                  l1892 0767  
                l1884 074F                  l1876 0737                  l1868 071F                  l1894 076D  
                l1886 0755                  l1878 073D                  l1896 0773                  l1888 075B  
                l1898 0779                  _main 0716                  btemp 007E                  start 0000  
               ?_main 0070                 _TMR1H 000F                 _TMR1L 000E                 _PORTD 0008  
               _TRISD 0088                 _delay 0704                 status 0003                 wtemp0 007E  
        __end_of_main 0800                ??_main 0071                ?_delay 0070                _TMR1IF 0060  
              _TMR1CS 0081                _TMR1ON 0080                _TRISC0 0438                _TRISC1 0439  
              _TRISC2 043A      __end_of_lcd_data 0704  __size_of_lcd_command 0011        __pcstackCOMMON 0070  
       __end_of_delay 0716               ??_delay 0070       lcd_command@data 0070            __pmaintext 0716  
             _T1CKPS0 0084               _T1CKPS1 0085             ?_lcd_data 0070            ??_lcd_data 0070  
end_of_initialization 06DE         ??_lcd_command 0070   start_initialization 06DE   __end_of_lcd_command 06F3  
   __size_of_lcd_data 0011        __size_of_delay 0012           _lcd_command 06E2              __ptext84 0000  
            __ptext85 06F3              __ptext86 06E2              __ptext87 0704              __ptext88 0000  
            _lcd_data 06F3         __size_of_main 00EA          ?_lcd_command 0070  
